# EI.cfg
# E and I MT-type cell demo
# R. Clewley, October 2003
# See Documentation/DSSRT_documentation.rtf for explanation

##### Dynamical System set-up #####
### All external variable names (must be in same order as in raw simulation output data)
#   ( these are also the system's observables )
VARSEXT u1 u2 su1 su2 lu1 lu2 iu1 iu2

### All internal variable names (must be in same order as in raw simulation output data)
VARSINT hu1 hu2 mu1 mu2 nu1 nu2

# 'Inputs' to each variable (network's structural connectivity)
# These commands can be listed in any order. In any one command, after the
# the subject is specified as the first argument, the remaining
# arguments can be listed in any order.
#iu1 mu1 nu1 hu1 su2 lu1
INPUTS u1 su2 lu1 iu1 mu1 nu1 hu1
INPUTS u2 mu2 hu2 su1 nu2 iu2 lu2
INPUTS mu1 u1
INPUTS nu1 u1
INPUTS hu1 u1
INPUTS mu2 u2
INPUTS nu2 u2
INPUTS hu2 u2
INPUTS su1 u1
INPUTS su2 u2
INPUTS iu1
INPUTS iu2
INPUTS lu1 u1
INPUTS lu2 u2

### Bounds for each variable (be they exact & known, approximate, or local)
# These are currently only used by AttEst for approximate derivative measuring
# but they will be used later to automatically generate the `potentials`
# without the user having to supply the correct functions
# For BOUNDS, low value first, high value second (although order is really unimportant
# since parser will verify). Because so many gating variables are generally present for
# neural equations, the specification UNITBOUNDS is used to list unit-interval bounded
# variables.
BOUNDS u1 -100 50
BOUNDS u2 -100 50
UNITBOUNDS mu1 nu1 hu1 su1 iu1 lu1
UNITBOUNDS mu2 nu2 hu2 su2 iu2 lu2


### Differential Equations setup
## Differential equations exist for these variables:
DEQNS u1 mu1 nu1 hu1 su1 u2 mu2 nu2 hu2 su2

## Terms in the equations, split into the two types of input
# Classified as being either in set Gamma_1 or Gamma_2 (see documentation)
GAM1TERM u1 gn mu1 3 vna hu1 1
GAM1TERM u1 gk nu1 4 vk
GAM1TERM u1 gl lu1 1 vl
GAM1TERM u1 gsi su2 1 vrev_i
GAM2TERM u1 ibi iu1 1
GAM1TERM mu1 mtau_recip u1 1 minf
GAM1TERM nu1 ntau_recip u1 1 ninf
GAM1TERM hu1 htau_recip u1 1 hinf
GAM1TERM su1 stau_recip_i u1 1 sinf_i

GAM1TERM u2 gn mu2 3 vna hu2 1
GAM1TERM u2 gk nu2 4 vk
GAM1TERM u2 gl lu2 1 vl
GAM1TERM u2 gse su1 1 vrev_e
GAM2TERM u2 ibe iu2 1
GAM1TERM mu2 mtau_recip u2 1 minf
GAM1TERM nu2 ntau_recip u2 1 ninf
GAM1TERM hu2 htau_recip u2 1 hinf
GAM1TERM su2 stau_recip_e u2 1 sinf_e

### Parameters used in the system's full differential equations
# used for Psi and Phi calculations
DEPAR gn 100
DEPAR gk 80
DEPAR gl 0.1
DEPAR gsi 0.5
DEPAR gse 0.2
DEPAR vna 50
DEPAR vk -100
DEPAR vl -67
DEPAR vrev_i -80
DEPAR vrev_e 0
DEPAR ibi 1
DEPAR ibe 3

#### Functional network graphics objects
# A diagram state is made up entirely of the states of its nodes and links...
### Nodes are observable variables (one needed for each observable)
# Must define non-regular state maps to include activity of internal variables
    
## E-cell ##
# first argument to NODE must be a label corresponding to an observable's name, as
# defined by an entry in the VARSEXT command. Then the x,y co-ords of the circle,
# and then its size. The drawing area has normalized co-ordinates [0,1] x [0,1].
NODE u1 0.5 0.75 0.1
# `E` is the letter to place in the circle, followed by x,y co-ords and size
NODELABEL u1 E 0.475 0.72 0.06
# Added states using NODEADDSTATES will have a state value associated with them
# derived from their positional order in the command arguments
# (after default obligatory state 0). In this example:
#  'g-' = Either Na or K potent. (state 1), 'r-' = Na active only (state 2)
#  'y-' = K active only (state 3),          'k-' = both currents active (state 4),
#  'r:' = Na active, K potent. (state 5),   'y:' = K active, Na potentiated (state 6)
# These codes are standard matlab plot styles: a letter for the colour name,
# followed by a token giving the line style.
NODEADDSTATES u1 6  g- r- y- k- r: y:
NODESTATEMAP_ACTS u1 nodeStateMapActs_M nodeStateMapActs_N
NODESTATEMAP_POTS u1 nodeStateMapPots_M nodeStateMapPots_N

## I-cell ##
NODE u2 0.5 0.25 0.1
NODELABEL u2 I 0.47 0.22 0.06
NODEADDSTATES u2 6 g- r- y- k- r: y:
NODESTATEMAP_ACTS u2 nodeStateMapActs_M nodeStateMapActs_N
NODESTATEMAP_POTS u2 nodeStateMapPots_M nodeStateMapPots_N

## E-cell bias current ##
# This guy has no additional states, because it has no internal variables,
# but we still need the NODEADDSTATES command to tell DSSRT this
NODE iu1 0.83 0.915 0.06
NODELABEL iu1 ibE 0.785 0.9 0.03
NODEADDSTATES iu1 0
NODESTATEMAP_ACTS iu1
NODESTATEMAP_POTS iu1

## I-cell bias current ##
NODE iu2 0.28 0.06 0.06
NODELABEL iu2 ibI 0.24 0.045 0.03
NODEADDSTATES iu2 0
NODESTATEMAP_ACTS iu2
NODESTATEMAP_POTS iu2

## E-cell leak current ##
# This also has no additional states, because it has no internal variables,
# but we still need the NODEADDSTATES command to tell DSSRT this
NODE lu1 0.83 0.76 0.06
NODELABEL lu1 L1 0.8 0.745 0.03
NODEADDSTATES lu1 0
NODESTATEMAP_ACTS lu1
NODESTATEMAP_POTS lu1

## I-cell leak current ##
# This also has no additional states, because it has no internal variables,
# but we still need the NODEADDSTATES command to tell DSSRT this
NODE lu2 0.1 0.2 0.06
NODELABEL lu2 L2 0.07 0.18 0.03
NODEADDSTATES lu2 0
NODESTATEMAP_ACTS lu2
NODESTATEMAP_POTS lu2

# `se` -- post-synaptic variable assoc. w/ excitation from pre-synaptic E-cell
NODE su1 0.3 0.6 0.1
NODELABEL su1 se 0.24 0.57 0.06
NODEADDSTATES su1 0
NODESTATEMAP_ACTS su1
NODESTATEMAP_POTS su1

# `si` -- post-synaptic variable assoc. w/ inhibition from pre-synaptic I-cell
NODE su2 0.7 0.4 0.1
NODELABEL su2 si 0.645 0.37 0.06
NODEADDSTATES su2 0
NODESTATEMAP_ACTS su2
NODESTATEMAP_POTS su2

## Links are structural couplings between observables (cannot include internal variables)
# Each should correspond to an external variable input (arg 1) to an observable (2nd argument),
# as defined by a relationship in an INPUTS command. All links have default state maps.
# The four arguments following are the x1, y2, x2, y2 values of the arrow start & end, respectively.
# NB There is an unused optional final argument in all these LINK commands: if it is 0 then
# nothing is different, but 1 makes the link invisible. This is useful when there are links that you
# don't care about and you don't want to clutter the diagram. DSSRT dictates that every
# interaction between two observables (spec'd by INPUTS) *must* have an associated LINK command, and so for the
# unwanted links, specify the 1st and 2nd arguments as usual, but specify any co-ordinates (for
# instance, zeros) for the arrow and put a 1 at the end!
# E -> se
LINK u1 su1 0.42 0.7 0.35 0.65
# I -> si
LINK u2 su2 0.58 0.3 0.65 0.35
# se -> I
LINK su1 u2 0.36 0.53 0.47 0.3
# si -> E
LINK su2 u1 0.64 0.47 0.53 0.7
# ibE -> E
LINK iu1 u1 0.77 0.91 0.55 0.78
# ibI -> I
LINK iu2 u2 0.33 0.085 0.47 0.2
# L1 -> E
LINK lu1 u1 0.77 0.75 0.55 0.76
# L2 -> I
LINK lu2 u2 0.145 0.22 0.44 0.23
# E -> L1
LINK u1 lu1 0 0 0 0 1
# I -> L2
LINK u2 lu2 0 0 0 0 1

### Variable `slider` bars
# There MUST be a slider bar for every internal and external variable defined.
# These can be given in any order
# Additional args after name: xval, ybotval, yheight,
# variable's low value, variable's high value (these can be what scaling
# you like), log-scale-switch.
# Final argument is the switch for allowing log-scaling. 0 = `off`;
# 1,2 = `on` ... but 1 means the zero-end is magnified, and 2
# means the top end (near 1) is magnified (e.g. for the `h` variables)
# in Hodgkin-Huxley which become `active` as they begin to decrease from h=1
VBAR mu1 0.55 0.86 0.10 0 1 1
VBAR mu2 0.43 0.01 0.10 0 1 1
VBAR nu1 0.58 0.86 0.10 0 1 1
VBAR nu2 0.46 0.01 0.10 0 1 1
VBAR hu1 0.61 0.86 0.10 0 1 2
VBAR hu2 0.49 0.01 0.10 0 1 2
VBAR u1  0.37 0.76 0.20 -100 40 0
VBAR u2  0.62 0.08 0.20 -100 40 0
VBAR su1 0.14 0.55 0.10 0 1 1
VBAR su2 0.75 0.52 0.10 0 1 1
VBAR lu1 0.91 0.65 0.1 0 1 0
VBAR lu2 0.195 0.255 0.1 0 1 0
VBAR iu1 0.91 0.85 0.1 0 1 0
VBAR iu2 0.20 0.00 0.1 0 1 0